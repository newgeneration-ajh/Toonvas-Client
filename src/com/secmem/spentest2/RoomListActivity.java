package com.secmem.spentest2;

import java.io.UnsupportedEncodingException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.util.ArrayList;

import android.annotation.SuppressLint;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.Toast;

import com.secmem.packet.PacketData;
import com.secmem.packet.PacketType;
import com.secmem.packet.RecvThread;
import com.secmem.packet.SendManager;
import com.secmem.room.RoomAdapter;
import com.secmem.room.RoomBufferManager;
import com.secmem.room.RoomData;
import com.secmem.room.RoomListData;
import com.secmem.room.RoomPacketData;

public class RoomListActivity extends Activity implements OnItemClickListener, OnClickListener {

	private ListView lv_room;
	private ImageButton btn_createRoom;
	private RoomAdapter adapter;
	private ArrayList<RoomData> roomList;
	private Context m_context = null;
	private String m_Id = null;
	private int m_roomNum = 0;
	
	/** Called when the activity is first created. */ // this is a example? -_-??
	@Override
	public void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	
	    setContentView(R.layout.activity_list_room);
	    
	    btn_createRoom = (ImageButton) findViewById(R.id.btn_room);
	    btn_createRoom.setOnClickListener(this);
	    	    
	    lv_room = (ListView) findViewById(R.id.lv_room);
	    lv_room.setOnItemClickListener(this);
	    
	    roomList = new ArrayList<RoomData>();
	    
	    adapter = new RoomAdapter(this, R.layout.item_list_room, roomList);
	    
	    m_Id = getIntent().getExtras().getString("ID");
	    
	    
	    m_context = this;
	    
	    RecvThread.setHandler(m_Handler);
	    
	    lv_room.setAdapter(adapter);
	     
	    
	    PacketData tmpData = new PacketData(PacketType.REQ_ROOMLIST,  null , 0);
	    SendManager.pushQueue(tmpData);
	    
	    
	    
	}

	protected void onDestroy() {
		
		super.onDestroy();
	};
	
	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		RecvThread.setHandler(m_Handler);
	}

	@Override
	public void onItemClick(AdapterView<?> view, View arg1, int pos, long arg3) {
		
		RoomData tmpData = (RoomData)view.getAdapter().getItem(pos);
		
		m_roomNum = tmpData.getmRoomNum();
		
		ByteBuffer tmpBuffer = ByteBuffer.allocate(4);
		
		tmpBuffer.order(ByteOrder.LITTLE_ENDIAN);
		
		tmpBuffer.putInt( m_roomNum );
		
		tmpBuffer.flip();
		
		PacketData tmpPacketData = new PacketData ( PacketType.REQ_ROOM_PW_STATE , tmpBuffer.array() , 4 );
		
		m_roomNum = tmpData.getmRoomNum();
		
		SendManager.pushQueue(tmpPacketData);
		
	}

	@Override
	public void onClick(View view) {
		switch(view.getId()) {
		case R.id.btn_room :
			
			View v = (View) getLayoutInflater().inflate(R.layout.dialog_create_room, null);
			final EditText et_title = (EditText) v.findViewById(R.id.et_roomTitle);
			final EditText et_pw = (EditText) v.findViewById(R.id.et_roomPw);
			
			AlertDialog.Builder builder = new AlertDialog.Builder(this);
			builder.setView(v);
			builder.setTitle("방 만들기");
			builder.setPositiveButton("만들기", new DialogInterface.OnClickListener() {
				
				@Override
				public void onClick(DialogInterface dialog, int which) {
					String Name = et_title.getText().toString();
					String pw = et_pw.getText().toString();
					
					RoomPacketData tmpData = new RoomPacketData ( Name , pw );
					RoomBufferManager tmpBuffer = new RoomBufferManager( tmpData );
					SendManager.pushQueue( tmpBuffer.getRoomBuffer() );
					tmpBuffer = null;
				}
			});
			
			builder.setNegativeButton("취소", new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {}
			});
			
			AlertDialog dialog = builder.create();
			dialog.show();
			break;
		}
	}
	
	@SuppressLint("HandlerLeak")
	final Handler m_Handler = new Handler(){
		@Override
		public void handleMessage(android.os.Message msg) {
			if ( msg.what == PacketType.RET_CREATEROOM)
			{
				//이 변수에 아이디를 넣으시면 됩니다.
				//지금은 임시 아이디를넣겠음./
				String tmpMakerID = "방장 아이디.";
				
				ByteBuffer tmpBuffer = ByteBuffer.allocate(4096);
				
				tmpBuffer.order(ByteOrder.LITTLE_ENDIAN);
				
				tmpBuffer.put ( msg.getData().getByteArray("msgdata") );
				
				tmpBuffer.flip();
				
				m_roomNum = tmpBuffer.getInt();
				
				//여기에 지훈이형이 intent에 각 정보들을 실어서 보내야함~
				Intent callIntent = new Intent ( m_context , WaitRoomListActivity.class );
				callIntent.putExtra("roomNum", Integer.toString(m_roomNum));	//룸 번호
				callIntent.putExtra("ID", m_Id);		//방장 아이디
		
				startActivity( callIntent );
			}
			else if ( msg.what == PacketType.RET_JOINROOM )
			{
				
			}
			else if ( msg.what == PacketType.RET_ROOMLIST )
			{
				Log.d("room list", "inner");
				RoomListData tmpData = null;
				tmpData = new RoomListData(msg.getData());
				RoomData tmpRoom = new RoomData( tmpData.m_roomNum , tmpData.m_Name, tmpData.m_Master, 0 , tmpData.m_inerNum );
				Log.d("room list" , tmpData.m_Name);
				adapter.insertItem(tmpRoom);
				tmpData = null;
				tmpRoom = null;
			}
			else if ( msg.what == PacketType.RET_DESTROYROOM )
			{
				RoomListData tmpData = null;
				tmpData = new RoomListData(msg.getData());
				RoomData tmpRoom = new RoomData( tmpData.m_roomNum , tmpData.m_Name, tmpData.m_Master, 0 , tmpData.m_inerNum );
				adapter.deleteItem(tmpRoom);
				tmpData = null;
				tmpRoom = null;
			}
			else if ( msg.what == PacketType.RET_NOROOMLIST )
			{
				Log.d("room list", "null");
			}
			else if ( msg.what == PacketType.RET_ROOMJOIN_FULL)
			{
			
			}
			else if ( msg.what == PacketType.RET_ROOMPW_OK_EXIST )
			{
				Toast.makeText(m_context , "OK", Toast.LENGTH_SHORT).show();
				View v = (View) getLayoutInflater().inflate(R.layout.dialog_password_room, null);
				final EditText et_pw = (EditText) v.findViewById(R.id.roomPW);
				
				AlertDialog.Builder builder = new AlertDialog.Builder(m_context);
				builder.setView(v);
				builder.setTitle("Password를 넣어주세요");
				builder.setPositiveButton("접속", new DialogInterface.OnClickListener() {
					
					@Override
					public void onClick(DialogInterface dialog, int which) {
						String strPW = et_pw.getText().toString();
						
						PacketData tmpData = null;
						ByteBuffer tmpBuffer = null;
						
						tmpBuffer = ByteBuffer.allocate( strPW.length() + 8 );
						
						tmpBuffer.order(ByteOrder.LITTLE_ENDIAN);
						
						tmpBuffer.putInt(m_roomNum);
						tmpBuffer.putInt( strPW.length() );
						try {
							tmpBuffer.put(strPW.getBytes("KSC5601"));
						} catch (UnsupportedEncodingException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						
						tmpBuffer.flip();
						
						tmpData = new PacketData ( PacketType.REQ_JOINROOM , tmpBuffer.array() , strPW.length() + 8  );
						
						
						SendManager.pushQueue( tmpData );
						tmpBuffer = null;
					}
				});
				
				builder.setNegativeButton("취소", new DialogInterface.OnClickListener() {
					@Override
					public void onClick(DialogInterface dialog, int which) {}
				});
				
				AlertDialog dialog = builder.create();
				dialog.show();
			}
			else if ( msg.what == PacketType.RET_ROOMPW_NO_EXIST )
			{
				String str = new String("");
				ByteBuffer tmpBuffer = null;
				tmpBuffer = ByteBuffer.allocate(str.length() + 8);
				tmpBuffer.order(ByteOrder.LITTLE_ENDIAN);
				tmpBuffer.putInt(m_roomNum);
				tmpBuffer.put(str.getBytes());
				tmpBuffer.flip();
				PacketData tmpData = new PacketData ( PacketType.REQ_JOINROOM , tmpBuffer.array() , str.length() + 8);
				SendManager.pushQueue(tmpData);
				
				tmpData = null;
				tmpBuffer = null;
				str = null;
			}
			
			else if ( msg.what == PacketType.RET_ROOMJOIN_OK )
			{
				//여기에 지훈이형이 intent에 각 정보들을 실어서 보내야함~
				Intent callIntent = 	new Intent ( m_context , WaitRoomListActivity.class );
				 
				String joinerID = "참가자ID";
				
				//참가자의 접속
				//룸 번호와 자신의 아이디를 넘겨줌.
				callIntent.putExtra("roomNum", Integer.toString(m_roomNum));	//룸 번호
				callIntent.putExtra("ID", m_Id);				//참가자 아이디
				
				startActivity( callIntent );
			}
			
			else if ( msg.what == PacketType.RET_ROOMMSG_NO )
			{
				
			}
		};
	};
	
	public int getRoomNum ( ) 
	{
		return m_roomNum;
	}

}
